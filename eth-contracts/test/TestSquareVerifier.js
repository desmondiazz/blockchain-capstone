// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const verifier = artifacts.require('Verifier');
const validProof = require('../../zokrates/code/square/proof');

contract('TestSquareVerifier', accounts => {
    
    describe('Test Zokrates verification', function () {
        beforeEach(async function () { 
            this.contract = await verifier.new({from:accounts[0]});            
        })
        
        // - use the contents from proof.json generated from zokrates steps
        // Test verification with correct proof
        it('Should verify with correct proof', async function () { 
            const result = await this.contract.verifyTx.call(validProof.proof.a,validProof.proof.b,validProof.proof.c,validProof.inputs);
            assert.equal(result,true,"Proof is not valid");
        });
        
        // Test verification with incorrect proof
            it('Should not verify with incorrect proof', async function () { 
                var input = [1,2];
                const result = await this.contract.verifyTx.call(validProof.proof.a,validProof.proof.b,validProof.proof.c,input);
                assert.equal(result,false,"Proof is not valid");
            });
    });
})